enum ClientCommand {
    ShowAllStreams
    ShowConnectedStreams
    ConnectToStream
    DisconnectFromStream
    StartStreaming
    UploadText
    UploadFile
    SaveScreenshot
    Quit
}

enum CustomEvent {
    Render
    UpdateStreamDisplay
    ShowSimpleMessage
    SendLobbyMessage
    SaveScreenshot
}

struct Client {
    string name
    [ 0 u8 ] payload
    Guid id
    i64 joinTime
    u64 lastMessage
}

struct ClientAudioQuery {
    Client client
    bool readAccess
    bool writeAccess
}

variant UserInputData {
    null startStream
    ClientAudioQuery queryAudio
    string file
    string text
}

struct UserInput {
    Guid id
    UserInputData data
}

inlineC "MAKE_DEFAULT_LIST(UserInput);"

struct ClientConfiguration {
    ClientAuthentication authentication
    string ttfFile
    string hostname
    i32 fontSize
    i32 windowWidth
    i32 windowHeight
    u16 port
    bool noGui
    bool noAudio
    bool fullscreen
}

struct Rect {
    i32 x
    i32 y
    i32 w
    i32 h
}

variant OptionalRect {
    null none
    Rect rect
}

struct FRect {
    f32 x
    f32 y
    f32 w
    f32 h
}

enum MoveMode {
    None
    Position
    Size
}

struct StreamDisplayChat {
    [0 Chat] logs
    u32 offset
    u32 count
}

variant StreamDisplayData {
    null none
    [ 0 u8 ] image
    [ 0 f32 ] audioData
    StreamDisplayChat chat
    string text
}

resource StreamDisplay {
    ServerConfiguration config
    StreamDisplayData data
    [ 0 null ] outgoing
    FRect dstRect
    OptionalRect srcRect
    Guid id
    u32 mtu
    null texture
} r {
    inlineC "
        SDL_DestroyTexture(r.texture);
        for(size_t i = 0; i < r.outgoing.used; ++i){
            enet_packet_destroy(r.outgoing.buffer[i]);
        }
    "
}

inlineC "MAKE_DEFAULT_LIST(StreamDisplay);"

resource ClientData {
    [0 ServerConfiguration] allStreams
    [0 StreamDisplay] displays
    null authentication
    null mutex
} c {
    inlineC "SDL_DestroyMutex(c.mutex);"
}

enum AudioStreamSource {
    Microphone
    File
    Window
}

enum ImageExtension {
    ICO
    CUR
    BMP
    JPG
    JPEG 
    LBM
    PCX
    PNG
    PNM 
    SVG
    TGA
    WEBP
    XCF 
    XPM 
    XV 
}

enum VideoExtension {
    WMV
    MP4
    MPV
    GIF
}

enum AudioExtension {
    WAV
    MP3
    OGG
}

variant FileExtension {
    VideoExtension video
    AudioExtension audio
    ImageExtension image
    null font
    null text
}
