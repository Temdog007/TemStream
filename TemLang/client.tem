inlineFile "TemLang/ui.tem"

enum ClientCommand {
    ShowStatus
    ConnectToStream
    DisconnectFromStream
    UploadText
    UploadFile
    ChangeAudioVolume
    ChangeAudioSource
    ChangePressToTalk
    ChangeSilenceThreshold
    Quit
}

enum CustomEvent {
    UpdateStreamDisplay
    ShowSimpleMessage
    SendLobbyMessage
    SaveScreenshot
    UpdateAudioDisplay
    UpdateVideoDisplay
    RecordingAudio
    SetUiMenu
    UpdateUi
    UiClicked
    UiChanged
    Render
}

struct VideoFrame {
    [0 u8] video
    Guid id
    u16 width
    u16 height
}

variant UserInputData {
    null startStream
    Client queryAudio
    Client queryVideo
    string file
    string text
}

struct UserInput {
    Guid id
    UserInputData data
}

inlineC "MAKE_DEFAULT_LIST(UserInput);"

variant TalkMode {
    string pressToTalk
    string pressToMute
    null none
}

struct ClientConfiguration {
    string ttfFile
    string credentials
    TalkMode talkMode
    f32 silenceThreshold
    i32 fontSize
    i32 windowWidth
    i32 windowHeight
    bool noGui
    bool noTui
    bool noAudio
    bool showLabel
    bool fullscreen
}

enum MoveMode {
    None
    Position
    Size
}

struct StreamDisplayChat {
    [0 Chat] logs
    u32 offset
    u32 count
}

variant StreamDisplayData {
    null none
    [ 0 u8 ] image
    StreamDisplayChat chat
    string text
    [2 i32] videoDimensions
    [2 i64] timeRange
}

struct CurrentAudio {
    Guid id
    [ 0 u8 ] audio
}

resource StreamDisplay {
    ServerConfiguration config
    StreamDisplayData data
    Client client
    [ 0 null ] outgoing
    FRect dstRect
    OptionalRect srcRect
    Guid id
    null texture
    u32 recordings
    u32 mtu
    i32 zOrder
    bool choosingPlayback
    bool visible    
} r {
    inlineC "
        SDL_DestroyTexture(r.texture);
        for(size_t i = 0; i < r.outgoing.used; ++i){
            enet_packet_destroy(r.outgoing.buffer[i]);
        }
    "
}

inlineC "
    MAKE_DEFAULT_LIST(StreamDisplay);
    extern void unloadSink(int32_t);
"

resource ClientData {
    [0 ServerConfiguration] allStreams
    [0 StreamDisplay] displays
    null window
    null configuration
    null mutex
} c {
    inlineC "
        SDL_DestroyMutex(c.mutex);
    "
}

enum AudioStreamSource {
    None
    Microphone
    Window
    File
}

enum VideoStreamSource {
    None
    Webcam
    Window
}

enum ImageExtension {
    ICO
    CUR
    BMP
    JPG
    JPEG 
    LBM
    PCX
    PNG
    PNM 
    SVG
    TGA
    WEBP
    XCF 
    XPM 
    XV 
}

enum AudioExtension {
    WAV
    MP3
    OGG
}

variant FileExtension {
    AudioExtension audio
    ImageExtension image
    null font
    null text
}

struct AudioSendThreadData {
    [ 0 null ] packets
    Guid id
}

struct Ratio {
    u32 numerator
    u32 denominator
}

struct WindowData {
    string name
    Guid id
    null connection
    Ratio ratio
    u32 windowId
    u32 bitrateInMbps
    u16 width
    u16 height
    u16 fps
    u16 keyFrameInterval
}

inlineC "MAKE_DEFAULT_LIST(WindowData);"

inlineText imageConversionsKernel "kernel/image_conversions.cl"

flag MouseState {
    InWindow
    Visible
}

inlineData DefaultFont "/usr/share/fonts/truetype/ubuntu/Ubuntu-M.ttf" 