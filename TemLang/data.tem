inlineCHeaders

enum StreamType {
    Other
    Text
    Chat
    Image
    Video
    Audio
    Replay
}

inlineC "extern void closeSocket(int);"

flag SocketOptions {
    Tcp
    Server
    Local
}

struct IpAddress {
    string ip
    string port
}

variant Address {
    string domainSocket
    IpAddress ipAddress
}

struct ConsumerConfiguration {
    string ttfFile
    i32 width
    i32 height
    bool fullscreen
}

struct ServerConfiguration {
    u32 maxProducers
    u32 maxConsumers
    bool record
}

struct ProducerConfiguration {
    string name
    StreamType streamType
}

variant Configuration {
    null none
    ConsumerConfiguration consumer
    ProducerConfiguration producer
    ServerConfiguration server
}

struct AllConfiguration {
    Configuration configuration
    Address address
    bool authentication
}

variant StreamMessage {
    null none
    string text
    string chatMessage
}

inlineC "MAKE_DEFAULT_LIST(StreamMessage);"

struct StreamInformation {
    string name
    i32 owner
    StreamType type
    bool authentication
}

inlineC "MAKE_DEFAULT_LIST(StreamInformation);"

variant Message {
    [0 StreamInformation] currentStreams
    StreamInformation createStream
    StreamMessage streamMessage
    string consume
    bool createStreamAck
    null getStreams
}

struct Guid {
    [u64 2] numbers
}

inlineC "MAKE_DEFAULT_LIST(Guid);"

inlineC "
static inline Guid
randomGuid(pRandomState rs)
{
    return (Guid){
        .numbers = {
            random64(rs),
            random64(rs)
        }
    };
}
static inline int getGuidString(const Guid* g, char buffer[128]){
    union {
        struct {
            uint32_t Data1;
            uint16_t Data2;
            uint16_t Data3;
            uint8_t Data4[8];
        };
        Guid g;
    } guid;
    guid.g = *g;
    return snprintf(buffer,128,
    \"%08X-%04hX-%04hX-%02hhX%02hhX-%02hhX%02hhX%02hhX%02hhX%02hhX%02hhX\",
    guid.Data1, guid.Data2, guid.Data3, 
    guid.Data4[0], guid.Data4[1], guid.Data4[2], guid.Data4[3],
    guid.Data4[4], guid.Data4[5], guid.Data4[6], guid.Data4[7]);
}
"

struct MarkedMessage {
    Message message
    Guid guid
    i32 sent
}

inlineC "MAKE_DEFAULT_LIST(MarkedMessage);"